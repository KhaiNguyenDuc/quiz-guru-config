server:
  port: 8083

spring:
  jpa:
    hibernate:
      ddl-auto: none
    properties: 
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
    show-sql: true
  datasource:
    url: jdbc:mysql://mysql-db:3306/quizguru_quiz
    username: root
    password: k989898k
    driver-class-name: com.mysql.cj.jdbc.Driver
  sql:
    init:
      mode: always
  rabbitmq: 
    host: rabbitmq
    port: 5672
    password: guest
    username: guest
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://localhost:7080/realms/Quizguru/protocol/openid-connect/certs
          
logging:
  level:
    root: DEBUG 
  pattern:
    level: "%5p[${spring.application.name},%X{trace_id},%X{span_id}]"
    
eureka:
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://eureka-server:8761/eureka/
  instance:
    preferIpAddress: true

management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  endpoint:
    shutdown:
      enabled: true
    health:
      probes:
        enabled: true
    metrics:
      enabled: true
    prometheus:
      enabled: true
  info:
    env:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}

amqp:
  exchanges:
    internal: internal.exchange
  queues:
    generation: generation.queue
    text-vocab: text-vocab.queue
    file-vocab: file-vocab.queue
    list-vocab: list-vocab.queue
  routing-keys:
    internal-generation: internal.generation.routing-key
    internal-text-vocab: internal.text-vocab.routing-key
    internal-list-vocab: internal.list-vocab.routing-key
    internal-file-vocab: internal.file-vocab.routing-key